using ADOBuddyTool.Domain.Entities;

namespace ADOBuddyTool.Domain.Services;

/// <summary>
/// Domain service interface for work item business logic operations
/// </summary>
public interface IWorkItemDomainService
{
    /// <summary>
    /// Determines the appropriate retrieval strategy based on operation type
    /// </summary>
    /// <param name="isHygieneCheck">True if retrieving for hygiene checks</param>
    /// <param name="isSwagUpdate">True if retrieving for SWAG updates</param>
    /// <param name="isRoadmapGeneration">True if retrieving for roadmap generation</param>
    /// <returns>Work item retrieval strategy</returns>
    WorkItemRetrievalStrategy DetermineRetrievalStrategy(bool isHygieneCheck, bool isSwagUpdate, bool isRoadmapGeneration);

    /// <summary>
    /// Validates work item data quality and completeness
    /// </summary>
    /// <param name="workItem">Work item to validate</param>
    /// <returns>Validation result with any issues found</returns>
    WorkItemValidationResult ValidateWorkItem(WorkItem workItem);

    /// <summary>
    /// Determines if a work item should be included in roadmap generation
    /// </summary>
    /// <param name="workItem">Work item to check</param>
    /// <returns>True if item should be included in roadmap</returns>
    bool ShouldIncludeInRoadmap(WorkItem workItem);

    /// <summary>
    /// Calculates the cumulative SWAG value for a release train based on its features
    /// </summary>
    /// <param name="releaseTrain">Release train work item</param>
    /// <param name="features">Related feature work items</param>
    /// <returns>Calculated SWAG value</returns>
    double CalculateReleaseTrainSwag(WorkItem releaseTrain, IEnumerable<WorkItem> features);

    /// <summary>
    /// Determines if a work item is auto-generated (contains auto-generated tag)
    /// </summary>
    /// <param name="workItem">Work item to check</param>
    /// <returns>True if work item is auto-generated</returns>
    bool IsAutoGenerated(WorkItem workItem);
}

/// <summary>
/// Strategy for retrieving work items based on operation type
/// </summary>
public class WorkItemRetrievalStrategy
{
    public string WorkItemTypes { get; set; } = string.Empty;
    public string StateFilter { get; set; } = string.Empty;
    public bool IncludeRelations { get; set; }
    public string Description { get; set; } = string.Empty;
}

/// <summary>
/// Result of work item validation
/// </summary>
public class WorkItemValidationResult
{
    public bool IsValid { get; set; }
    public List<string> Issues { get; set; } = new();
    public WorkItemValidationSeverity Severity { get; set; }
}

/// <summary>
/// Severity levels for work item validation issues
/// </summary>
public enum WorkItemValidationSeverity
{
    Info,
    Warning,
    Error
}
